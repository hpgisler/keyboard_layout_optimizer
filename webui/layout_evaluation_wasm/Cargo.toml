[package]
authors = ["Dario GÃ¶tz <dario.goetz@googlemail.com>"]
edition = "2018"
license = "GPL-3.0-or-later"
name = "layout_evaluation_wasm"
rust-version = "1.60"
version = "0.1.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
keyboard_layout = { path = "../../keyboard_layout" }
layout_evaluation = { path = "../../layout_evaluation" }
layout_optimization_common = { path = "../../layout_optimization/layout_optimization_common" }
layout_optimization_genetic = { path = "../../layout_optimization/layout_optimization_genetic" }
layout_optimization_sa = { path = "../../layout_optimization/layout_optimization_sa" }

instant = { version = "0.1.12", features = ["wasm-bindgen"] }
js-sys = "0.3.72"
serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9.34"
wasm-bindgen = { version = "=0.2.95", features = ["serde-serialize"] }

argmin = "0.7.0"
genevo = { version = "0.7.0", features = ["wasm-bindgen"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "*", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "*", optional = true }

[dev-dependencies]
wasm-bindgen-test = "*"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
